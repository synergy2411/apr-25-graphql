FETCHING USERS-

query FetchUsers{
users{
  id
  name
  age

}
}


FETCHING POSTS- 
query FetchPosts{
  posts{
    id
    title
    creator{
      id
      name
    }
  }
}

FETCHING COMMENTS-
query FetchComments{
  comments{
    id
    text
   author{
    id
    name
    age
  }
  }
}

CREATE USER -
mutation CreateUser{
  createUser(name:"Chandler", age:24){
    id
    name
    age
  }
}

CREATE POST-

mutation CreatePost{
  createPost(data:{
    title:"Working is C#",
    body:"Net of Dot Net",
    creatorId:"u099"
  }){
    id
    title
    body
    published
  }
}

CREATE COMMENT-
mutation CreateComment{
  createComment(data:{
    text:"Awesome content",
    postId:"p001",
    authorId: "u001"
  }) {
    id
    text
    post{
      id
      title
    }
  }
}

DELETE COMMENT- 
mutation DeleteComment{
  deleteComment(commentId:"c099"){
    id
    text
  }
}

UPDATE USER
mutation UpdateUser{
  updateUser(userId:"u099", data:{
    name:"Rachel Green"
    age: 23
  }){
    id
    name
    age
  }
}


UPDATE POST
mutation UpdatePost{
	updatePost(postId:"p002", data:{
    body:"Changed Post body",
    published:true
  }){
    id
    title
    body
    published
  }
}


POST SUBSCRIPTION
subscription PostSubscription{
	post{
    mutation
    post{
      id
      title
      body
      published
    }
  }
}

-------------------
PRISMA MONGO GRAPHQL
--------------------

CREATE USER
mutation CreateUser{
  signUp(data:{
    name:"rachel",
    age: 22,
    email:"rachel@test.com",
    password:"rachel123",
    role:ADMIN
  }){
    message
  }
}


SIGNIN 
mutation SignIn{
  signIn (data:{
    email:"monica@test.com",
    password:"monica123"
  }){
    token
  }
}

FETCH POSTS
query FetchPosts{
  posts{
    id
    title
    body
    published
    author{
      name
      age
      email
      role
    }
  }
}

CREATE POST - (REQUIRE AUTH HEADER)
mutation CreatePost{
  createPost(data:{
    title:"Spring in Java",
    body:"Great framework"
  }){
    id
    title
    body
    published
  }
}
